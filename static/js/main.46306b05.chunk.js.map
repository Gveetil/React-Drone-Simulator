{"version":3,"sources":["components/LayoutGrid/HeaderTile.js","components/LayoutGrid/Tile.js","utils/AppContext.js","components/LayoutGrid/GridRow.js","components/LayoutGrid/index.js","components/Navbar.js","App.js","index.js"],"names":["HeaderTile","props","key","headerId","className","headerName","Tile","tileClassName","clickCount","showDrone","showHighlight","tileId","AppContextAction","AppContext","React","createContext","Provider","defaultState","rangeX","rangeY","dronePosition","x","y","positionsClicked","newPositionClicked","totalClicked","droneInstructions","reducer","state","action","type","move","newPosition","AppProvider","value","useReducer","dispatch","useAppContext","useContext","GridRow","rowId","yPos","rangeStart","rangeEnd","tiles","i","currPos","push","renderTiles","LayoutGrid","handleKeyDown","event","preventDefault","useEffect","window","addEventListener","droneTile","document","querySelector","scrollIntoViewIfNeeded","behavior","block","rowStart","rowEnd","rows","renderRows","colStart","colEnd","headerRow","renderHeaderRow","Navbar","href","htmlFor","readOnly","id","placeholder","aria-label","aria-describedby","onClick","instructionsText","target","closest","firstChild","nextSibling","copy","aria-hidden","Object","keys","length","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.46306b05.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n// This component generates a grid header tile \r\nexport default function HeaderTile(props) {\r\n    return (\r\n        <div key={`${props.headerId}`}\r\n            className=\"header-tile\">\r\n            {props.headerName}\r\n        </div>)\r\n}\r\n","import React from \"react\";\r\n\r\n// This component generates a grid tile \r\nexport default function Tile(props) {\r\n\r\n    let tileClassName = (props.clickCount) ? \"clicked-tile\" : \"grid-tile\";\r\n\r\n    if (props.showDrone)\r\n        tileClassName += \" drone-tile\";\r\n\r\n    if (props.showHighlight)\r\n        tileClassName += \" highlight-tile\";\r\n\r\n    return (\r\n        <div key={props.tileId}\r\n            className={tileClassName}>\r\n            {props.clickCount ? props.clickCount : \"\"}\r\n        </ div>)\r\n}\r\n","import React, { useReducer, useContext } from \"react\";\r\n\r\n// Enum of Action keys supported by this context  \r\nconst AppContextAction = {\r\n    MOVE_DRONE: \"MOVE_DRONE\",       // Move the drone to a new position\r\n    CLICK_POSITION: \"CLICK_POSITION\",   // Click a photo at the current drone position\r\n}\r\n\r\nconst AppContext = React.createContext();\r\nconst { Provider } = AppContext;\r\nconst defaultState = {\r\n    rangeX: [-10, 10],\r\n    rangeY: [-10, 10],\r\n    dronePosition: { x: 0, y: 0 },\r\n    positionsClicked: {},\r\n    newPositionClicked: false,\r\n    totalClicked: 0,\r\n    droneInstructions: \"\",\r\n};\r\n\r\n// Reducer to make changes to the application context state\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case AppContextAction.MOVE_DRONE: {\r\n            let x = state.dronePosition.x;\r\n            let y = state.dronePosition.y;\r\n            switch (action.move) {\r\n                case \"<\":\r\n                    x -= 1;\r\n                    break;\r\n                case \">\":\r\n                    x += 1;\r\n                    break;\r\n                case \"^\":\r\n                    y -= 1;\r\n                    break;\r\n                case \"v\":\r\n                    y += 1;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            let rangeX = state.rangeX;\r\n            let rangeY = state.rangeY;\r\n            if (x < state.rangeX[0]) {\r\n                rangeX[0] = x;\r\n            } else if (x > state.rangeX[1]) {\r\n                rangeX[1] = x;\r\n            }\r\n            if (y < state.rangeY[0]) {\r\n                rangeY[0] = y;\r\n            } else if (y > state.rangeY[1]) {\r\n                rangeY[1] = y;\r\n            }\r\n            const droneInstructions = state.droneInstructions + action.move;\r\n            return {\r\n                ...state,\r\n                droneInstructions,\r\n                newPositionClicked: false,\r\n                rangeX,\r\n                rangeY,\r\n                dronePosition: { x, y },\r\n            };\r\n        }\r\n        case AppContextAction.CLICK_POSITION: {\r\n            const newPosition = `X${state.dronePosition.x}Y${state.dronePosition.y}`;\r\n            let clickCount = state.positionsClicked[newPosition] || 0;\r\n            clickCount++;\r\n            const droneInstructions = state.droneInstructions + \"x\";\r\n            return {\r\n                ...state,\r\n                droneInstructions,\r\n                totalClicked: state.totalClicked + 1,\r\n                newPositionClicked: true,\r\n                positionsClicked: {\r\n                    ...state.positionsClicked,\r\n                    [newPosition]: clickCount,\r\n                },\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// Returns the Provider to be used when using the application context \r\nconst AppProvider = ({ value = [], ...props }) => {\r\n    const [state, dispatch] = useReducer(reducer, defaultState);\r\n    return <Provider value={[state, dispatch]} {...props} />;\r\n};\r\n\r\n// Returns the application context \r\nconst useAppContext = () => {\r\n    return useContext(AppContext);\r\n};\r\n\r\nexport { AppProvider, useAppContext, AppContextAction };\r\n","import React from \"react\";\r\nimport HeaderTile from \"./HeaderTile\";\r\nimport Tile from \"./Tile\";\r\nimport { useAppContext } from \"../../utils/AppContext\";\r\n\r\n// This component generates a grid data row\r\nexport default function GridRow(props) {\r\n    /* eslint-disable no-unused-vars */\r\n    const [state, _] = useAppContext();\r\n\r\n    // This function renders tiles for this row\r\n    function renderTiles([rangeStart, rangeEnd], rowId, yPos) {\r\n        const tiles = [];\r\n        for (let i = rangeStart; i <= rangeEnd; i++) {\r\n            const currPos = `X${i}${rowId}`;\r\n            const clickCount = state.positionsClicked[currPos] || 0;\r\n            const showDrone = (yPos === state.dronePosition.y && i === state.dronePosition.x);\r\n            tiles.push(<Tile key={currPos} tileId={currPos}\r\n                showHighlight={showDrone && state.newPositionClicked}\r\n                showDrone={showDrone} clickCount={clickCount} />);\r\n        }\r\n        return tiles;\r\n    }\r\n\r\n    return (\r\n        <div className=\"d-flex flex-row flex-nowrap justify-content-center\">\r\n            <HeaderTile key={props.rowId} headerId={props.rowId} headerName={props.yPos} />\r\n            {renderTiles(state.rangeX, props.rowId, props.yPos)}\r\n        </div>\r\n    );\r\n}","import React, { useEffect } from \"react\";\r\nimport GridRow from \"./GridRow\";\r\nimport HeaderTile from \"./HeaderTile\";\r\nimport { AppContextAction, useAppContext } from \"../../utils/AppContext\";\r\nimport \"./style.css\";\r\n\r\n// This component generates the layout grid for the drone to move on\r\nexport default function LayoutGrid() {\r\n    const [state, dispatch] = useAppContext();\r\n\r\n    // Add key down listener on load of component\r\n    useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    // on update, scroll the drone into view \r\n    useEffect(() => {\r\n        const droneTile = document.querySelector(\".drone-tile\");\r\n        if (droneTile)\r\n            droneTile.scrollIntoViewIfNeeded({ behavior: \"smooth\", block: \"start\" });\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    });\r\n\r\n    // Function handles the key down event \r\n    function handleKeyDown(event) {\r\n        event.preventDefault();\r\n        switch (event.key) {\r\n            case \"ArrowLeft\":\r\n                dispatch({\r\n                    type: AppContextAction.MOVE_DRONE,\r\n                    move: \"<\",\r\n                });\r\n                break;\r\n            case \"ArrowRight\":\r\n                dispatch({\r\n                    type: AppContextAction.MOVE_DRONE,\r\n                    move: \">\",\r\n                });\r\n                break;\r\n            case \"ArrowUp\":\r\n                dispatch({\r\n                    type: AppContextAction.MOVE_DRONE,\r\n                    move: \"^\",\r\n                });\r\n                break;\r\n            case \"ArrowDown\":\r\n                dispatch({\r\n                    type: AppContextAction.MOVE_DRONE,\r\n                    move: \"v\",\r\n                });\r\n                break;\r\n            case \" \":\r\n                dispatch({\r\n                    type: AppContextAction.CLICK_POSITION,\r\n                });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    // Generate the x axis header row\r\n    function renderHeaderRow([colStart, colEnd]) {\r\n        const headerRow = [];\r\n        for (let i = colStart; i <= colEnd; i++) {\r\n            headerRow.push(<HeaderTile key={`X${i}`} headerId={`X${i}`} headerName={i} />);\r\n        }\r\n        return headerRow;\r\n    }\r\n\r\n    // Generate rows to be displayed on the y-axis\r\n    function renderRows([rowStart, rowEnd]) {\r\n        const rows = [];\r\n        for (let i = rowStart; i <= rowEnd; i++) {\r\n            const rowId = `Y${i}`;\r\n            rows.push(<GridRow key={rowId} rowId={rowId} yPos={i} />);\r\n        }\r\n        return rows;\r\n    }\r\n\r\n    return (\r\n        <div className=\"scroll-wrapper\">\r\n            <div className=\"d-flex flex-column flex-nowrap overflow-auto p-2 my-3 mx-auto\">\r\n                {renderRows(state.rangeY)}\r\n                <div className=\"d-flex flex-row flex-nowrap justify-content-center\">\r\n                    <HeaderTile headerId={`XY`} headerName=\"\" />\r\n                    {renderHeaderRow(state.rangeX)}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\nimport copy from 'copy-to-clipboard';\nimport { useAppContext } from \"../utils/AppContext\";\n\n// This component renders the top navigation bar\nexport default function Navbar() {\n    /* eslint-disable no-unused-vars */\n    const [state, _] = useAppContext();\n\n    // Copy drone instructions to clipboard \n    const handleCopyToClipboard = (event) => {\n        const instructionsText = event.target.closest(\".input-group\").firstChild.nextSibling;\n        if (instructionsText)\n            copy(instructionsText.value);\n    }\n\n    return (\n        <nav className=\"navbar fixed-top navbar-dark bg-primary\" >\n            <a className=\"navbar-brand\" href=\"/React-Drone-Simulator\">Drone Simulator</a>\n            <form className=\"form-inline ml-auto\">\n                <div className=\"input-group my-2 my-md-0\">\n                    <label className=\"text-white pr-2 form-control-sm\" htmlFor=\"drone-instructions\">Drone Input</label>\n                    <input type=\"text\" className=\"form-control form-control-sm\"\n                        readOnly id=\"drone-instructions\"\n                        placeholder=\"\"\n                        value={state.droneInstructions}\n                        aria-label=\"Drone Instructions\"\n                        aria-describedby=\"copy-instructions\" />\n                    <div className=\"input-group-append\">\n                        <button className=\"btn btn-secondary btn-sm\"\n                            type=\"button\"\n                            onClick={handleCopyToClipboard}\n                            id=\"copy-instructions\">\n                            <i className=\"fa fa-clipboard\" aria-hidden=\"true\"></i>\n                        </button>\n                    </div>\n                </div>\n                <button type=\"button\" className=\"btn btn-primary btn-sm ml-2 my-2 my-md-0\">\n                    Targets&nbsp;&nbsp;<span className=\"badge badge-light\">{Object.keys(state.positionsClicked).length}</span>\n                </button>\n                <button type=\"button\" className=\"btn btn-primary btn-sm my-2 my-md-0\">\n                    Total Clicks&nbsp;&nbsp;<span className=\"badge badge-light\">{state.totalClicked}</span>\n                </button>\n                <button className=\"btn btn-secondary btn-sm ml-2 my-2 my-md-0\" type=\"button\">Run Simulator</button>\n            </form>\n        </nav>\n    );\n}\n","import React from 'react';\nimport './App.css';\nimport LayoutGrid from './components/LayoutGrid';\nimport Navbar from './components/Navbar';\nimport { AppProvider } from \"./utils/AppContext\";\n\nfunction App() {\n  return (\n    <AppProvider>\n      <Navbar />\n      <LayoutGrid />\n    </AppProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}