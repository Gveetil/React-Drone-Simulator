{"version":3,"sources":["utils/AppContext.js","components/Navbar.js","components/SuccessToast.js","utils/DroneSimulator.js","pages/SimulateDrone.js","components/LayoutGrid/HeaderTile.js","components/LayoutGrid/Tile.js","components/LayoutGrid/GridRow.js","components/LayoutGrid/index.js","pages/Homepage.js","pages/Information.js","utils/useDroneController.js","App.js","index.js"],"names":["AppContextAction","AppContext","React","createContext","Provider","defaultState","rangeX","rangeY","dronePosition","x","y","positionsClicked","newPositionClicked","totalClicked","successToast","droneInstructions","clone","this","reducer","state","action","type","move","newPosition","clickCount","value","AppProvider","props","useReducer","dispatch","useAppContext","useContext","Navbar","className","to","aria-hidden","isExecuting","title","role","Object","keys","length","htmlFor","readOnly","id","placeholder","aria-label","aria-describedby","onClick","event","instructionsText","target","closest","firstChild","nextSibling","copy","onKeyUp","e","keyCode","preventDefault","stopSimulation","SuccessToast","data-dismiss","droneSpeed","DroneSimulator","start","speed","droneInput","completed","timeoutInterval","clearTimeout","split","setTimeout","startSimulation","stop","setInterval","executeNextAction","shift","dispatchAction","executeAllActions","forEach","allowedInputValues","RegExp","speedDisplay","SimulateDrone","instructions","error","useState","formState","setFormState","handleInputChange","name","toLowerCase","match","useEffect","enableUserInput","onChange","min","max","sampleDroneInput","data","sampleData","spellCheck","rows","HeaderTile","key","headerId","headerName","Tile","tileClassName","showDrone","showHighlight","tileId","GridRow","rowId","yPos","rangeStart","rangeEnd","tiles","i","currPos","push","renderTiles","LayoutGrid","droneTile","document","querySelector","scrollIntoView","behavior","block","inline","rowStart","rowEnd","renderRows","colStart","colEnd","headerRow","renderHeaderRow","Homepage","Information","allowKeyEvents","currentKeyEventsConfig","App","droneController","setIsExecuting","handleKeyDown","simulationCompleted","window","addEventListener","useDroneController","basename","process","exact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.32bc7c7a.chunk.js","sourcesContent":["import React, { useReducer, useContext } from \"react\";\r\n\r\n// Enum of Action keys supported by this context  \r\nconst AppContextAction = {\r\n    MOVE_DRONE: \"MOVE_DRONE\",       // Move the drone to a new position\r\n    CLICK_POSITION: \"CLICK_POSITION\",   // Click a photo at the current drone position\r\n    RESET_DRONE_LAYOUT: \"RESET_DRONE_LAYOUT\",  // Reset drone position and layout data\r\n    SHOW_SUCCESS_TOAST: \"SHOW_SUCCESS_TOAST\",  // Update the success toast message / status\r\n}\r\n\r\nconst AppContext = React.createContext();\r\nconst { Provider } = AppContext;\r\nconst defaultState = {\r\n    rangeX: [-10, 10],\r\n    rangeY: [-10, 10],\r\n    dronePosition: { x: 0, y: 0 },\r\n    positionsClicked: {},\r\n    newPositionClicked: false,\r\n    totalClicked: 0,\r\n    successToast: false,\r\n    droneInstructions: \"\",\r\n    clone: function () {\r\n        return {\r\n            ...this,\r\n            rangeX: [...this.rangeX],\r\n            rangeY: [...this.rangeY],\r\n            dronePosition: { ...this.dronePosition },\r\n            positionsClicked: { ...this.positionsClicked },\r\n        };\r\n    }\r\n};\r\n\r\n// Reducer to make changes to the application context state\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case AppContextAction.MOVE_DRONE: {\r\n            let x = state.dronePosition.x;\r\n            let y = state.dronePosition.y;\r\n            switch (action.move) {\r\n                case \"<\":\r\n                    x -= 1;\r\n                    break;\r\n                case \">\":\r\n                    x += 1;\r\n                    break;\r\n                case \"^\":\r\n                    y -= 1;\r\n                    break;\r\n                case \"v\":\r\n                    y += 1;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            let rangeX = state.rangeX;\r\n            let rangeY = state.rangeY;\r\n            if (x < state.rangeX[0]) {\r\n                rangeX[0] = x;\r\n            } else if (x > state.rangeX[1]) {\r\n                rangeX[1] = x;\r\n            }\r\n            if (y < state.rangeY[0]) {\r\n                rangeY[0] = y;\r\n            } else if (y > state.rangeY[1]) {\r\n                rangeY[1] = y;\r\n            }\r\n            const droneInstructions = state.droneInstructions + action.move;\r\n            return {\r\n                ...state,\r\n                droneInstructions,\r\n                newPositionClicked: false,\r\n                rangeX,\r\n                rangeY,\r\n                dronePosition: { x, y },\r\n            };\r\n        }\r\n        case AppContextAction.CLICK_POSITION: {\r\n            const newPosition = `X${state.dronePosition.x}Y${state.dronePosition.y}`;\r\n            let clickCount = state.positionsClicked[newPosition] || 0;\r\n            clickCount++;\r\n            const droneInstructions = state.droneInstructions + \"x\";\r\n            return {\r\n                ...state,\r\n                droneInstructions,\r\n                totalClicked: state.totalClicked + 1,\r\n                newPositionClicked: true,\r\n                positionsClicked: {\r\n                    ...state.positionsClicked,\r\n                    [newPosition]: clickCount,\r\n                },\r\n            };\r\n        }\r\n        case AppContextAction.RESET_DRONE_LAYOUT: {\r\n            return defaultState.clone();\r\n        }\r\n        case AppContextAction.SHOW_SUCCESS_TOAST: {\r\n            return {\r\n                ...state,\r\n                successToast: action.value,\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// Returns the Provider to be used when using the application context \r\nconst AppProvider = ({ value = [], ...props }) => {\r\n    const [state, dispatch] = useReducer(reducer, defaultState.clone());\r\n    return <Provider value={[state, dispatch]} {...props} />;\r\n};\r\n\r\n// Returns the application context \r\nconst useAppContext = () => {\r\n    return useContext(AppContext);\r\n};\r\n\r\nexport { AppProvider, useAppContext, AppContextAction };\r\n","import React from \"react\";\nimport copy from 'copy-to-clipboard';\nimport { Link } from \"react-router-dom\";\nimport { AppContextAction, useAppContext } from \"../utils/AppContext\";\n\n// This component renders the top navigation bar\nexport default function Navbar(props) {\n    /* eslint-disable no-unused-vars */\n    const [state, dispatch] = useAppContext();\n\n    // Copy drone instructions to clipboard \n    const handleCopyToClipboard = (event) => {\n        const instructionsText = event.target.closest(\".input-group\").firstChild.nextSibling;\n        if (instructionsText)\n            copy(instructionsText.value);\n    }\n\n    const handleReset = (event) => {\n        dispatch({\n            type: AppContextAction.RESET_DRONE_LAYOUT,\n        });\n    }\n\n    return (\n        <nav className=\"navbar fixed-top navbar-dark bg-primary\" >\n            <Link to=\"/\" className=\"navbar-brand\">\n                <i className=\"fa fa-crosshairs pr-3\" aria-hidden=\"true\"></i>\n                Drone Simulator</Link>\n            <form className=\"form-inline ml-auto\">\n                {(!props.isExecuting) && <Link to=\"/information\" className=\"btn btn-primary btn-sm my-2 my-md-0\"\n                    title=\"Information\"\n                    role=\"button\">\n                    <i className=\"fa fa-info-circle fa-lg\" aria-hidden=\"true\"></i>\n                </Link>}\n                <button type=\"button\"\n                    title=\"Total targets photographed\"\n                    className=\"btn btn-primary btn-sm my-2 my-md-0 disable-cursor\">\n                    Targets&nbsp;&nbsp;<span className=\"badge badge-light\">{Object.keys(state.positionsClicked).length}</span>\n                </button>\n                <button type=\"button\"\n                    title=\"Total photographs taken\"\n                    className=\"btn btn-primary btn-sm my-2 my-md-0 disable-cursor\">\n                    Total Clicks&nbsp;&nbsp;<span className=\"badge badge-light\">{state.totalClicked}</span>\n                </button>\n                <div className=\"input-group my-2 my-md-0\">\n                    <label className=\"text-white pr-2 form-control-sm\" htmlFor=\"drone-instructions\">Drone Input</label>\n                    <input type=\"text\" className=\"form-control form-control-sm\"\n                        readOnly id=\"drone-instructions\"\n                        placeholder=\"\"\n                        value={state.droneInstructions}\n                        aria-label=\"Drone Instructions\"\n                        aria-describedby=\"copy-instructions\" />\n                    <div className=\"input-group-append\">\n                        <button className=\"btn btn-secondary btn-sm\"\n                            type=\"button\"\n                            onClick={handleCopyToClipboard}\n                            title=\"Copy\"\n                            id=\"copy-instructions\">\n                            <i className=\"fa fa-clipboard\" aria-hidden=\"true\"></i>\n                        </button>\n                    </div>\n                </div>\n                {(!props.isExecuting) &&\n                    <button type=\"button\"\n                        className=\"btn btn-secondary btn-sm ml-2 my-2 my-md-0\"\n                        onClick={handleReset}\n                        onKeyUp={(e) => {\n                            // Prevent space bar from triggering the reset button\n                            if (e.keyCode === 32)\n                                e.preventDefault()\n                        }}\n                        title=\"Reset\">\n                        <i className=\"fa fa-undo\" aria-hidden=\"true\"></i>\n                    </button>}\n                {(props.isExecuting) &&\n                    <button className=\"btn btn-secondary btn-sm ml-2 my-2 my-md-0\"\n                        onClick={() => props.stopSimulation()}\n                        type=\"button\">Stop Execution</button>}\n                {(!props.isExecuting) &&\n                    <Link to=\"/simulate\" className=\"btn btn-secondary btn-sm ml-2 my-2 my-md-0\"\n                        role=\"button\">Run Simulator</Link>}\n\n            </form>\n        </nav>\n    );\n}\n","import React from \"react\";\r\nimport { AppContextAction, useAppContext } from \"../utils/AppContext\";\r\n\r\n// This component renders a Success Toast Message\r\n// This is a quick custom built toast since Bootstrap's Toast component \r\n// has dependencies on JQuery and other js files\r\nexport default function SuccessToast() {\r\n    /* eslint-disable no-unused-vars */\r\n    const [state, dispatch] = useAppContext();\r\n\r\n    // Close the toast message\r\n    function handleClose() {\r\n        dispatch({\r\n            type: AppContextAction.SHOW_SUCCESS_TOAST,\r\n            value: false,\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"shadow position-fixed bg-success rounded fixed-bottom w-25 m-4 p-2\">\r\n            <div className=\"toast fade show\">\r\n                <div className=\"toast-header text-white\">\r\n                    <span className=\"mr-auto h6\"><i className=\"fa fa-check pr-2\" aria-hidden=\"true\"></i> {state.successToast}</span>\r\n                    <button type=\"button\" className=\"ml-2 mb-1 close\"\r\n                        onClick={handleClose}\r\n                        data-dismiss=\"toast\">&times;</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import { AppContextAction } from \"./AppContext\";\r\n\r\n/** The available duration between drone actions in milliseconds\r\n *  this is selected based on speed setting used */\r\nconst droneSpeed = [300, 150, 50];\r\n\r\n/** The milliseconds to wait before starting the simulation - important to ensure page loads first */\r\nconst waitingTime = 700;\r\n\r\n/** This module executes the drone simulation */\r\nconst DroneSimulator = {\r\n    // Initialize Drone Simulation\r\n    start(speed, droneInput, dispatch, completed) {\r\n        // Clear state\r\n        if (this.timeoutInterval) {\r\n            clearTimeout(this.timeoutInterval);\r\n            this.timeoutInterval = null;\r\n        }\r\n        this.speed = droneSpeed[speed - 1];\r\n        this.droneInput = droneInput.split(\"\");\r\n        this.dispatch = dispatch;\r\n        this.completed = completed;\r\n        this.timeoutInterval = setTimeout(() => this.startSimulation(), waitingTime);\r\n    },\r\n    // Stop Drone Simulation\r\n    stop() {\r\n        if (this.timeoutInterval)\r\n            clearTimeout(this.timeoutInterval);\r\n\r\n        this.timeoutInterval = null;\r\n    },\r\n    // Schedule Drone Simulation actions\r\n    startSimulation() {\r\n        this.timeoutInterval = setInterval(() => this.executeNextAction(), this.speed);\r\n    },\r\n    // Executes the next action from the input list\r\n    executeNextAction() {\r\n        // If the instructions have completed, stop execution\r\n        // and execute completed callback function\r\n        if (this.droneInput.length <= 0) {\r\n            this.stop();\r\n            this.completed();\r\n            return;\r\n        }\r\n        let action = this.droneInput.shift();\r\n        this.dispatchAction(action);\r\n    },\r\n    // Dispatches a given action by calling the dispatch callback function \r\n    dispatchAction(action) {\r\n        if (action === \"x\") {\r\n            this.dispatch({\r\n                type: AppContextAction.CLICK_POSITION,\r\n            });\r\n        } else {\r\n            this.dispatch({\r\n                type: AppContextAction.MOVE_DRONE,\r\n                move: action,\r\n            });\r\n        }\r\n    },\r\n    // Execute actions and get simulation result immediately\r\n    executeAllActions(droneInput, dispatch) {\r\n        this.dispatch = dispatch;\r\n        let droneActions = droneInput.split(\"\");\r\n        droneActions.forEach(action => {\r\n            this.dispatchAction(action);\r\n        });\r\n        return true;\r\n    }\r\n}\r\n\r\nexport default DroneSimulator;","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AppContextAction, useAppContext } from \"../utils/AppContext\";\r\nimport DroneSimulator from \"../utils/DroneSimulator\";\r\nimport sampleDroneInput from \"../data/droneInput.json\";\r\n\r\n// Values allowed in drone input field\r\n/* eslint-disable-next-line no-useless-escape */\r\nconst allowedInputValues = new RegExp(/^[x<>v\\^]*$/g);\r\n\r\n// The Speed Levels supported\r\nconst speedDisplay = [\"Slow\", \"Medium\", \"Fast\"];\r\n\r\n// This component renders the simulate drone page\r\nexport default function SimulateDrone(props) {\r\n    /* eslint-disable no-unused-vars */\r\n    const [_, dispatch] = useAppContext();\r\n    const defaultState = {\r\n        speed: 2,\r\n        instructions: \"\",\r\n        error: false\r\n    };\r\n    const [formState, setFormState] = useState(defaultState);\r\n\r\n    // Start drone simulation\r\n    const handleExecute = (event) => {\r\n        // Ensure intructions are specified\r\n        if (!formState.instructions) {\r\n            event.preventDefault();\r\n            setFormState({ ...formState, error: \"Please enter instructions for the drone to execute!\" });\r\n            return;\r\n        }\r\n        props.startSimulation(formState.speed, formState.instructions);\r\n    }\r\n\r\n    // Show result of simulation\r\n    function handleShowResult(event) {\r\n        // Ensure intructions are specified\r\n        if (!formState.instructions) {\r\n            event.preventDefault();\r\n            setFormState({ ...formState, error: \"Please enter instructions for the drone to execute!\" });\r\n            return;\r\n        }\r\n        dispatch({\r\n            type: AppContextAction.RESET_DRONE_LAYOUT,\r\n        });\r\n        DroneSimulator.executeAllActions(formState.instructions, dispatch);\r\n    }\r\n\r\n    // load sample drone input \r\n    function loadSampleInput() {\r\n        if (sampleDroneInput && sampleDroneInput.data) {\r\n            const sampleData = sampleDroneInput.data.toLowerCase();\r\n            // Ensure data in in the right format\r\n            if (sampleData.match(allowedInputValues)) {\r\n                setFormState({ ...formState, instructions: sampleData });\r\n                return;\r\n            }\r\n        }\r\n        setFormState({ ...formState, error: \"Unable to load sample data!\" });\r\n    }\r\n\r\n    // Disable user input on load of this page\r\n    useEffect(() => {\r\n        props.enableUserInput(false);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    // Validate and update form data on change\r\n    function handleInputChange(event) {\r\n        const name = event.target.name;\r\n        let value = event.target.value;\r\n        if (name === \"instructions\") {\r\n            value = value.toLowerCase();\r\n            if (!value.match(allowedInputValues))\r\n                return;\r\n        }\r\n        if (formState.error) {\r\n            // Clear errors if any\r\n            setFormState({\r\n                ...formState,\r\n                error: false,\r\n                [name]: value\r\n            });\r\n            return;\r\n        }\r\n        setFormState({\r\n            ...formState,\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    // Clear form data\r\n    function handleFormClear() {\r\n        setFormState(defaultState);\r\n    }\r\n\r\n    return (\r\n        <div className=\"modal-dialog modal-lg pt-3\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"simulateModalLabel\">Drone Simulator</h5>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <form>\r\n                        <label htmlFor=\"drone-speed\" className=\"col-form-label\">\r\n                            Speed: {speedDisplay[formState.speed - 1]}\r\n                        </label>\r\n                        <div>\r\n                            <input type=\"range\" className=\"w-25\"\r\n                                id=\"drone-speed\"\r\n                                name=\"speed\"\r\n                                onChange={handleInputChange}\r\n                                min=\"1\" max=\"3\"\r\n                                value={formState.speed}></input>\r\n                        </div>\r\n                        <div className=\"form-group clearfix mb-0\">\r\n                            <div className=\"py-1\">\r\n                                <label htmlFor=\"drone-instructions\" className=\"col-form-label\">Enter Instructions for the Drone to execute:</label>\r\n                                <div className=\"float-sm-right\">\r\n                                    <label className=\"col-form-label pr-2\" htmlFor=\"load-instructions\">Load sample</label>\r\n                                    <button className=\"btn btn-primary btn-sm\"\r\n                                        type=\"button\"\r\n                                        onClick={loadSampleInput}\r\n                                        id=\"load-instructions\">\r\n                                        <i className=\"fa fa-file-text-o\" aria-hidden=\"true\"></i>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                            <textarea className=\"form-control\"\r\n                                spellCheck=\"false\"\r\n                                name=\"instructions\" rows=\"5\"\r\n                                onChange={handleInputChange}\r\n                                id=\"drone-instructions\"\r\n                                aria-describedby=\"instructionHelp\"\r\n                                value={formState.instructions}>\r\n                            </textarea>\r\n                            <small id=\"instructionHelp\" className=\"form-text text-muted\">\r\n                                Allowed Input Values: &lt; &gt; ^ v and x\r\n                            </small>\r\n                        </div>\r\n                        {formState.error && <div className=\"alert alert-warning mt-2 mb-0\" role=\"alert\">\r\n                            {formState.error}\r\n                        </div>}\r\n                    </form>\r\n                </div>\r\n                <div className=\"modal-footer flex-wrap\">\r\n                    <Link to=\"/\" className=\"btn btn-secondary my-1 my-sm-0\" >Close</Link>\r\n                    <button type=\"button\"\r\n                        onClick={handleFormClear}\r\n                        className=\"btn btn-secondary my-1 my-sm-0\">Clear</button>\r\n                    <Link to=\"/\" role=\"button\"\r\n                        onClick={handleShowResult}\r\n                        className=\"btn btn-primary my-1 my-sm-0\" >Show Result</Link>\r\n                    <Link to=\"/\" role=\"button\"\r\n                        onClick={handleExecute}\r\n                        className=\"btn btn-primary my-1 my-sm-0\" >Simulate</Link>\r\n                </div>\r\n            </div>\r\n        </div>);\r\n}","import React from \"react\";\r\n\r\n// This component generates a grid header tile \r\nexport default function HeaderTile(props) {\r\n    return (\r\n        <div key={`${props.headerId}`}\r\n            className=\"header-tile\">\r\n            {props.headerName}\r\n        </div>)\r\n}\r\n","import React from \"react\";\r\n\r\n// This component generates a grid tile \r\nexport default function Tile(props) {\r\n\r\n    let tileClassName = (props.clickCount) ? \"clicked-tile\" : \"grid-tile\";\r\n\r\n    if (props.showDrone)\r\n        tileClassName += \" drone-tile\";\r\n\r\n    if (props.showHighlight)\r\n        tileClassName += \" highlight-tile\";\r\n\r\n    return (\r\n        <div key={props.tileId}\r\n            className={tileClassName}>\r\n            {props.clickCount ? props.clickCount : \"\"}\r\n        </ div>)\r\n}\r\n","import React from \"react\";\r\nimport HeaderTile from \"./HeaderTile\";\r\nimport Tile from \"./Tile\";\r\nimport { useAppContext } from \"../../utils/AppContext\";\r\n\r\n// This component generates a grid data row\r\nexport default function GridRow(props) {\r\n    /* eslint-disable no-unused-vars */\r\n    const [state, _] = useAppContext();\r\n\r\n    // This function renders tiles for this row\r\n    function renderTiles([rangeStart, rangeEnd], rowId, yPos) {\r\n        const tiles = [];\r\n        for (let i = rangeStart; i <= rangeEnd; i++) {\r\n            const currPos = `X${i}${rowId}`;\r\n            const clickCount = state.positionsClicked[currPos] || 0;\r\n            const showDrone = (yPos === state.dronePosition.y && i === state.dronePosition.x);\r\n            tiles.push(<Tile key={currPos} tileId={currPos}\r\n                showHighlight={showDrone && state.newPositionClicked}\r\n                showDrone={showDrone} clickCount={clickCount} />);\r\n        }\r\n        return tiles;\r\n    }\r\n\r\n    return (\r\n        <div className=\"d-flex flex-row flex-nowrap justify-content-center\">\r\n            <HeaderTile key={props.rowId} headerId={props.rowId} headerName={-1 * props.yPos} />\r\n            {renderTiles(state.rangeX, props.rowId, props.yPos)}\r\n        </div>\r\n    );\r\n}","import React, { useEffect } from \"react\";\r\nimport GridRow from \"./GridRow\";\r\nimport HeaderTile from \"./HeaderTile\";\r\nimport { useAppContext } from \"../../utils/AppContext\";\r\nimport \"./style.css\";\r\n\r\n// This component generates the layout grid for the drone to move on\r\nexport default function LayoutGrid() {\r\n    /* eslint-disable no-unused-vars */\r\n    const [state, _] = useAppContext();\r\n\r\n    // on update, scroll the drone into view \r\n    useEffect(() => {\r\n        const droneTile = document.querySelector(\".drone-tile\");\r\n        if (droneTile) {\r\n            droneTile.scrollIntoView({ behavior: \"smooth\", block: \"center\", inline: \"center\" });\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    });\r\n\r\n    // Generate the x axis header row\r\n    function renderHeaderRow([colStart, colEnd]) {\r\n        const headerRow = [];\r\n        for (let i = colStart; i <= colEnd; i++) {\r\n            headerRow.push(<HeaderTile key={`X${i}`} headerId={`X${i}`} headerName={i} />);\r\n        }\r\n        return headerRow;\r\n    }\r\n\r\n    // Generate rows to be displayed on the y-axis\r\n    function renderRows([rowStart, rowEnd]) {\r\n        const rows = [];\r\n        for (let i = rowStart; i <= rowEnd; i++) {\r\n            const rowId = `Y${i}`;\r\n            rows.push(<GridRow key={rowId} rowId={rowId} yPos={i} />);\r\n        }\r\n        return rows;\r\n    }\r\n\r\n    return (\r\n        <div className=\"d-flex flex-column flex-nowrap overflow-auto p-2 my-3 mx-auto\">\r\n            {renderRows(state.rangeY)}\r\n            <div className=\"d-flex flex-row flex-nowrap justify-content-center\">\r\n                <HeaderTile headerId={`XY`} headerName=\"\" />\r\n                {renderHeaderRow(state.rangeX)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport LayoutGrid from '../components/LayoutGrid';\r\n\r\n// This page displays the application homepage layout grid and the drone\r\nexport default function Homepage(props) {\r\n\r\n    // Enable user input on load of this page\r\n    useEffect(() => {\r\n        props.enableUserInput(true);\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"scroll-wrapper\">\r\n            <LayoutGrid />\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// This page displays information about the application and drone behaviors\r\nexport default function Information(props) {\r\n\r\n    // Disable user input on load of this page\r\n    useEffect(() => {\r\n        props.enableUserInput(false);\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"scroll-wrapper\">\r\n            <div className=\"p-2 my-3 mx-auto\">\r\n                <div className=\"container\">\r\n                    <div className=\"row align-items-center\">\r\n                        <div className=\"col-12\">\r\n                            <h3>Information</h3>\r\n                            <hr />\r\n                            <p>\r\n                                This application aims to simulate an aerial drone that takes photographs of targets.<br />\r\n                                Instructions are sent to the drone that tell the drone which direction to move <mark>north (^)</mark>, <mark>south (v)</mark>, <mark>east (&gt;)</mark> or <mark>west (&lt;)</mark> and when to take a <mark>photo (x)</mark>.\r\n                            </p>\r\n                            <p className=\"lead font-weight-normal\">\r\n                                Generating Drone Instructions\r\n                            </p>\r\n                            <ul>\r\n                                <li>The drone can be moved using the keyboard arrow keys</li>\r\n                                <li>Press the space bar to click a photo - the grid shows the number of photos clicked at a given location; totals are displayed at the top.</li>\r\n                                <li>The grid expands with drone movement.</li>\r\n                                <li>Instructions for the drone can be copied using the copy button.</li>\r\n                                <li>To clear the grid use the reset button on top.</li>\r\n                            </ul>\r\n                            <hr />\r\n                            <p className=\"lead font-weight-normal\">\r\n                                Running the Drone Simulator\r\n                            </p>\r\n                            <ul>\r\n                                <li>Click <mark>Run Simulator</mark> to open the simulator page.</li>\r\n                                <li>Paste drone instructions generated into the text field and click <mark>Simulate</mark>.</li>\r\n                                <li>To stop the simulation mid-way, click the <mark>Stop Execution</mark> button on top.</li>\r\n                                <li>For a sample long running simulation - click on <mark>Load Sample</mark> in the simulator page. This will run for about 8 minutes in the <mark>Fast</mark>mode.</li>\r\n                                <li>To skip to the simulation end result, click on <mark>Show Result</mark>.</li>\r\n                            </ul>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 text-center\">\r\n                            <Link to=\"/\" className=\"btn btn-secondary\" >Close</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { AppContextAction, useAppContext } from \"./AppContext\";\r\nimport DroneSimulator from \"./DroneSimulator\";\r\n\r\n// Flag - allow key down events to be processed\r\nlet allowKeyEvents = false;\r\nlet currentKeyEventsConfig = false;\r\n\r\n// This custom hook listens for keyboard events and if it is a \r\n// valid drone command, performs the action\r\nexport default function useDroneController() {\r\n    /* eslint-disable no-unused-vars */\r\n    const [_, dispatch] = useAppContext();\r\n    const [isExecuting, setIsExecuting] = useState(false);\r\n\r\n    // Add key down listener on load of component\r\n    useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    // Function handles the key down event \r\n    function handleKeyDown(event) {\r\n        // Check if keyboard events are enabled for this page\r\n        if (!allowKeyEvents)\r\n            return;\r\n        switch (event.key) {\r\n            case \"ArrowLeft\":\r\n                dispatch({\r\n                    type: AppContextAction.MOVE_DRONE,\r\n                    move: \"<\",\r\n                });\r\n                break;\r\n            case \"ArrowRight\":\r\n                dispatch({\r\n                    type: AppContextAction.MOVE_DRONE,\r\n                    move: \">\",\r\n                });\r\n                break;\r\n            case \"ArrowUp\":\r\n                dispatch({\r\n                    type: AppContextAction.MOVE_DRONE,\r\n                    move: \"^\",\r\n                });\r\n                break;\r\n            case \"ArrowDown\":\r\n                dispatch({\r\n                    type: AppContextAction.MOVE_DRONE,\r\n                    move: \"v\",\r\n                });\r\n                break;\r\n            case \" \":\r\n                dispatch({\r\n                    type: AppContextAction.CLICK_POSITION,\r\n                });\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    // Function enables / disables processing of user keydown events\r\n    function enableUserInput(value) {\r\n        // Disable user input when drone simulation is executing\r\n        if (isExecuting) {\r\n            currentKeyEventsConfig = value;\r\n            return;\r\n        }\r\n\r\n        allowKeyEvents = value;\r\n    }\r\n\r\n    // Stops the Drone Simulation\r\n    function stopSimulation() {\r\n        DroneSimulator.stop();\r\n        allowKeyEvents = currentKeyEventsConfig;\r\n        setIsExecuting(false);\r\n    }\r\n\r\n    // Starts the Drone Simulation\r\n    function startSimulation(speed, droneInput) {\r\n        currentKeyEventsConfig = allowKeyEvents;\r\n        allowKeyEvents = false;\r\n        setIsExecuting(true);\r\n        dispatch({\r\n            type: AppContextAction.RESET_DRONE_LAYOUT,\r\n        });\r\n        DroneSimulator.start(speed, droneInput, dispatch, simulationCompleted);\r\n    }\r\n\r\n    // Callback function gets called when simulation is completed\r\n    function simulationCompleted() {\r\n        stopSimulation();\r\n        dispatch({\r\n            type: AppContextAction.SHOW_SUCCESS_TOAST,\r\n            value: \"Simulation completed successfully!\",\r\n        });\r\n    }\r\n\r\n    return {\r\n        enableUserInput,\r\n        startSimulation,\r\n        stopSimulation,\r\n        isExecuting,\r\n    };\r\n}","import React from 'react';\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport './App.css';\nimport { useAppContext } from \"./utils/AppContext\";\nimport Navbar from './components/Navbar';\nimport SuccessToast from './components/SuccessToast';\nimport SimulateDrone from './pages/SimulateDrone';\nimport Homepage from './pages/Homepage';\nimport Information from './pages/Information';\nimport useDroneController from \"./utils/useDroneController\";\n\nfunction App() {\n  /* eslint-disable no-unused-vars */\n  const [state, _] = useAppContext();\n  const droneController = useDroneController();\n  return (\n    <HashRouter basename={process.env.PUBLIC_URL}>\n      <Navbar\n        isExecuting={droneController.isExecuting}\n        stopSimulation={droneController.stopSimulation} />\n      <div className=\"page-navbar-offset\">\n        <Switch>\n          <Route exact path=\"/simulate\">\n            {droneController.isExecuting ?\n              <Redirect to=\"/\" />\n              :\n              <SimulateDrone\n                enableUserInput={droneController.enableUserInput}\n                startSimulation={droneController.startSimulation} />}\n          </Route>\n          <Route exact path=\"/information\">\n            {droneController.isExecuting ?\n              <Redirect to=\"/\" />\n              :\n              <Information\n                enableUserInput={droneController.enableUserInput} />}\n          </Route>\n          <Route path=\"/\">\n            <Homepage enableUserInput={droneController.enableUserInput} />\n          </Route>\n        </Switch>\n      </div>\n      {state.successToast && <SuccessToast />}\n    </HashRouter >\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { AppProvider } from \"./utils/AppContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}