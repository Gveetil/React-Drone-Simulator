{"version":3,"sources":["utils/AppContext.js","components/Navbar.js","pages/SimulateDrone.js","components/LayoutGrid/HeaderTile.js","components/LayoutGrid/Tile.js","components/LayoutGrid/GridRow.js","components/LayoutGrid/index.js","pages/Homepage.js","pages/Information.js","utils/useDroneController.js","App.js","index.js"],"names":["AppContextAction","AppContext","React","createContext","Provider","defaultState","rangeX","rangeY","dronePosition","x","y","positionsClicked","newPositionClicked","totalClicked","droneInstructions","reducer","state","action","type","move","newPosition","clickCount","AppProvider","value","props","useReducer","dispatch","useAppContext","useContext","Navbar","className","to","role","aria-hidden","Object","keys","length","htmlFor","readOnly","id","placeholder","aria-label","aria-describedby","onClick","event","instructionsText","target","closest","firstChild","nextSibling","copy","isExecuting","stopSimulation","allowedInputValues","RegExp","SimulateDrone","speed","instructions","error","useState","formState","setFormState","handleInputChange","name","toLowerCase","match","useEffect","enableUserInput","onChange","min","max","sampleDroneInput","data","sampleData","spellCheck","rows","preventDefault","startSimulation","HeaderTile","key","headerId","headerName","Tile","tileClassName","showDrone","showHighlight","tileId","GridRow","rowId","yPos","rangeStart","rangeEnd","tiles","i","currPos","push","renderTiles","LayoutGrid","droneTile","document","querySelector","scrollIntoViewIfNeeded","behavior","block","scrollIntoView","rowStart","rowEnd","renderRows","colStart","colEnd","headerRow","renderHeaderRow","Homepage","Information","allowKeyEvents","previousKeyEventsSetting","App","droneController","setIsExecuting","handleKeyDown","window","addEventListener","droneInput","useDroneController","basename","process","exact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4ab35eec.chunk.js","sourcesContent":["import React, { useReducer, useContext } from \"react\";\r\n\r\n// Enum of Action keys supported by this context  \r\nconst AppContextAction = {\r\n    MOVE_DRONE: \"MOVE_DRONE\",       // Move the drone to a new position\r\n    CLICK_POSITION: \"CLICK_POSITION\",   // Click a photo at the current drone position\r\n}\r\n\r\nconst AppContext = React.createContext();\r\nconst { Provider } = AppContext;\r\nconst defaultState = {\r\n    rangeX: [-10, 10],\r\n    rangeY: [-10, 10],\r\n    dronePosition: { x: 0, y: 0 },\r\n    positionsClicked: {},\r\n    newPositionClicked: false,\r\n    totalClicked: 0,\r\n    droneInstructions: \"\",\r\n};\r\n\r\n// Reducer to make changes to the application context state\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case AppContextAction.MOVE_DRONE: {\r\n            let x = state.dronePosition.x;\r\n            let y = state.dronePosition.y;\r\n            switch (action.move) {\r\n                case \"<\":\r\n                    x -= 1;\r\n                    break;\r\n                case \">\":\r\n                    x += 1;\r\n                    break;\r\n                case \"^\":\r\n                    y -= 1;\r\n                    break;\r\n                case \"v\":\r\n                    y += 1;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            let rangeX = state.rangeX;\r\n            let rangeY = state.rangeY;\r\n            if (x < state.rangeX[0]) {\r\n                rangeX[0] = x;\r\n            } else if (x > state.rangeX[1]) {\r\n                rangeX[1] = x;\r\n            }\r\n            if (y < state.rangeY[0]) {\r\n                rangeY[0] = y;\r\n            } else if (y > state.rangeY[1]) {\r\n                rangeY[1] = y;\r\n            }\r\n            const droneInstructions = state.droneInstructions + action.move;\r\n            return {\r\n                ...state,\r\n                droneInstructions,\r\n                newPositionClicked: false,\r\n                rangeX,\r\n                rangeY,\r\n                dronePosition: { x, y },\r\n            };\r\n        }\r\n        case AppContextAction.CLICK_POSITION: {\r\n            const newPosition = `X${state.dronePosition.x}Y${state.dronePosition.y}`;\r\n            let clickCount = state.positionsClicked[newPosition] || 0;\r\n            clickCount++;\r\n            const droneInstructions = state.droneInstructions + \"x\";\r\n            return {\r\n                ...state,\r\n                droneInstructions,\r\n                totalClicked: state.totalClicked + 1,\r\n                newPositionClicked: true,\r\n                positionsClicked: {\r\n                    ...state.positionsClicked,\r\n                    [newPosition]: clickCount,\r\n                },\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// Returns the Provider to be used when using the application context \r\nconst AppProvider = ({ value = [], ...props }) => {\r\n    const [state, dispatch] = useReducer(reducer, defaultState);\r\n    return <Provider value={[state, dispatch]} {...props} />;\r\n};\r\n\r\n// Returns the application context \r\nconst useAppContext = () => {\r\n    return useContext(AppContext);\r\n};\r\n\r\nexport { AppProvider, useAppContext, AppContextAction };\r\n","import React from \"react\";\nimport copy from 'copy-to-clipboard';\nimport { Link } from \"react-router-dom\";\nimport { useAppContext } from \"../utils/AppContext\";\n\n// This component renders the top navigation bar\nexport default function Navbar(props) {\n    /* eslint-disable no-unused-vars */\n    const [state, _] = useAppContext();\n\n    // Copy drone instructions to clipboard \n    const handleCopyToClipboard = (event) => {\n        const instructionsText = event.target.closest(\".input-group\").firstChild.nextSibling;\n        if (instructionsText)\n            copy(instructionsText.value);\n    }\n\n    return (\n        <nav className=\"navbar fixed-top navbar-dark bg-primary\" >\n            <Link to=\"/\" className=\"navbar-brand\">Drone Simulator</Link>\n            <form className=\"form-inline ml-auto\">\n                <Link to=\"/information\" className=\"btn btn-primary btn-sm my-2 my-md-0\"\n                    role=\"button\">\n                    <i className=\"fa fa-info-circle fa-lg\" aria-hidden=\"true\"></i>\n                </Link>\n                <button type=\"button\" className=\"btn btn-primary btn-sm my-2 my-md-0\">\n                    Targets&nbsp;&nbsp;<span className=\"badge badge-light\">{Object.keys(state.positionsClicked).length}</span>\n                </button>\n                <button type=\"button\" className=\"btn btn-primary btn-sm my-2 my-md-0\">\n                    Total Clicks&nbsp;&nbsp;<span className=\"badge badge-light\">{state.totalClicked}</span>\n                </button>\n                <div className=\"input-group my-2 my-md-0\">\n                    <label className=\"text-white pr-2 form-control-sm\" htmlFor=\"drone-instructions\">Drone Input</label>\n                    <input type=\"text\" className=\"form-control form-control-sm\"\n                        readOnly id=\"drone-instructions\"\n                        placeholder=\"\"\n                        value={state.droneInstructions}\n                        aria-label=\"Drone Instructions\"\n                        aria-describedby=\"copy-instructions\" />\n                    <div className=\"input-group-append\">\n                        <button className=\"btn btn-secondary btn-sm\"\n                            type=\"button\"\n                            onClick={handleCopyToClipboard}\n                            id=\"copy-instructions\">\n                            <i className=\"fa fa-clipboard\" aria-hidden=\"true\"></i>\n                        </button>\n                    </div>\n                </div>\n                {(props.isExecuting) &&\n                    <button className=\"btn btn-secondary btn-sm ml-2 my-2 my-md-0\"\n                        onClick={() => props.stopSimulation()}\n                        type=\"button\">Stop Execution</button>}\n                {(!props.isExecuting) &&\n                    <Link to=\"/simulate\" className=\"btn btn-secondary btn-sm ml-2 my-2 my-md-0\"\n                        role=\"button\">Run Simulator</Link>}\n\n            </form>\n        </nav>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAppContext } from \"../utils/AppContext\";\r\nimport sampleDroneInput from \"../data/droneInput.json\";\r\n\r\n// Values allowed in drone input field\r\n/* eslint-disable-next-line no-useless-escape */\r\nconst allowedInputValues = new RegExp(/^[x<>v\\^]*$/g);\r\n\r\n// This component renders the simulate drone page\r\nexport default function SimulateDrone(props) {\r\n    /* eslint-disable no-unused-vars */\r\n    const [state, _] = useAppContext();\r\n    const defaultState = {\r\n        speed: 2,\r\n        instructions: \"\",\r\n        error: false,\r\n    };\r\n    const [formState, setFormState] = useState(defaultState);\r\n\r\n    // Start drone simulation\r\n    const handleExecute = (event) => {\r\n        // Ensure intructions are specified\r\n        if (!formState.instructions) {\r\n            event.preventDefault();\r\n            setFormState({ ...formState, error: \"Please enter instructions for the drone to execute!\" });\r\n            return;\r\n        }\r\n        props.startSimulation(formState.speed, formState.instructions);\r\n    }\r\n\r\n    // load sample drone input \r\n    function loadSampleInput() {\r\n        if (sampleDroneInput && sampleDroneInput.data) {\r\n            const sampleData = sampleDroneInput.data.toLowerCase();\r\n            // Ensure data in in the right format\r\n            if (sampleData.match(allowedInputValues)) {\r\n                setFormState({ ...formState, instructions: sampleData });\r\n                return;\r\n            }\r\n        }\r\n        setFormState({ ...formState, error: \"Unable to load sample data!\" });\r\n    }\r\n\r\n    // Disable user input on load of this page\r\n    useEffect(() => {\r\n        props.enableUserInput(false);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    // Validate and update form data on change\r\n    function handleInputChange(event) {\r\n        const name = event.target.name;\r\n        let value = event.target.value;\r\n        if (name === \"instructions\") {\r\n            value = value.toLowerCase();\r\n            if (!value.match(allowedInputValues))\r\n                return;\r\n        }\r\n        if (formState.error) {\r\n            // Clear errors if any\r\n            setFormState({\r\n                ...formState,\r\n                error: false,\r\n                [name]: value\r\n            });\r\n            return;\r\n        }\r\n        setFormState({\r\n            ...formState,\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    function handleFormClear() {\r\n        setFormState(defaultState);\r\n    }\r\n\r\n    return (\r\n        <div className=\"modal-dialog modal-lg\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"simulateModalLabel\">Drone Simulator</h5>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <form>\r\n                        <label htmlFor=\"drone-speed\" className=\"col-form-label\">Speed: {formState.speed} </label>\r\n                        <div>\r\n                            <input type=\"range\" className=\"w-25\"\r\n                                id=\"drone-speed\"\r\n                                name=\"speed\"\r\n                                onChange={handleInputChange}\r\n                                min=\"1\" max=\"3\"\r\n                                value={formState.speed}></input>\r\n                        </div>\r\n                        <div className=\"form-group clearfix mb-0\">\r\n                            <div className=\"py-1\">\r\n                                <label htmlFor=\"drone-instructions\" className=\"col-form-label\">Enter Instructions for the Drone to execute:</label>\r\n                                <div className=\"float-right\">\r\n                                    <label className=\"col-form-label pr-2\" htmlFor=\"load-instructions\">Load sample</label>\r\n                                    <button className=\"btn btn-primary btn-sm\"\r\n                                        type=\"button\"\r\n                                        onClick={loadSampleInput}\r\n                                        id=\"load-instructions\">\r\n                                        <i className=\"fa fa-file-text-o\" aria-hidden=\"true\"></i>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                            <textarea className=\"form-control\"\r\n                                spellCheck=\"false\"\r\n                                name=\"instructions\" rows=\"5\"\r\n                                onChange={handleInputChange}\r\n                                id=\"drone-instructions\"\r\n                                aria-describedby=\"instructionHelp\"\r\n                                value={formState.instructions}>\r\n                            </textarea>\r\n                            <small id=\"instructionHelp\" className=\"form-text text-muted\">\r\n                                Allowed Input Values: &lt; &gt; ^ v and x\r\n                            </small>\r\n                        </div>\r\n                        {formState.error && <div className=\"alert alert-warning mt-2 mb-0\" role=\"alert\">\r\n                            {formState.error}\r\n                        </div>}\r\n                    </form>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <Link to=\"/\" className=\"btn btn-secondary\" >Close</Link>\r\n                    <button type=\"button\"\r\n                        onClick={handleFormClear}\r\n                        className=\"btn btn-secondary\">Clear</button>\r\n                    <Link to=\"/\" role=\"button\"\r\n                        onClick={handleExecute}\r\n                        className=\"btn btn-primary\" >Simulate</Link>\r\n                </div>\r\n            </div>\r\n        </div>);\r\n}","import React from \"react\";\r\n\r\n// This component generates a grid header tile \r\nexport default function HeaderTile(props) {\r\n    return (\r\n        <div key={`${props.headerId}`}\r\n            className=\"header-tile\">\r\n            {props.headerName}\r\n        </div>)\r\n}\r\n","import React from \"react\";\r\n\r\n// This component generates a grid tile \r\nexport default function Tile(props) {\r\n\r\n    let tileClassName = (props.clickCount) ? \"clicked-tile\" : \"grid-tile\";\r\n\r\n    if (props.showDrone)\r\n        tileClassName += \" drone-tile\";\r\n\r\n    if (props.showHighlight)\r\n        tileClassName += \" highlight-tile\";\r\n\r\n    return (\r\n        <div key={props.tileId}\r\n            className={tileClassName}>\r\n            {props.clickCount ? props.clickCount : \"\"}\r\n        </ div>)\r\n}\r\n","import React from \"react\";\r\nimport HeaderTile from \"./HeaderTile\";\r\nimport Tile from \"./Tile\";\r\nimport { useAppContext } from \"../../utils/AppContext\";\r\n\r\n// This component generates a grid data row\r\nexport default function GridRow(props) {\r\n    /* eslint-disable no-unused-vars */\r\n    const [state, _] = useAppContext();\r\n\r\n    // This function renders tiles for this row\r\n    function renderTiles([rangeStart, rangeEnd], rowId, yPos) {\r\n        const tiles = [];\r\n        for (let i = rangeStart; i <= rangeEnd; i++) {\r\n            const currPos = `X${i}${rowId}`;\r\n            const clickCount = state.positionsClicked[currPos] || 0;\r\n            const showDrone = (yPos === state.dronePosition.y && i === state.dronePosition.x);\r\n            tiles.push(<Tile key={currPos} tileId={currPos}\r\n                showHighlight={showDrone && state.newPositionClicked}\r\n                showDrone={showDrone} clickCount={clickCount} />);\r\n        }\r\n        return tiles;\r\n    }\r\n\r\n    return (\r\n        <div className=\"d-flex flex-row flex-nowrap justify-content-center\">\r\n            <HeaderTile key={props.rowId} headerId={props.rowId} headerName={props.yPos} />\r\n            {renderTiles(state.rangeX, props.rowId, props.yPos)}\r\n        </div>\r\n    );\r\n}","import React, { useEffect } from \"react\";\r\nimport GridRow from \"./GridRow\";\r\nimport HeaderTile from \"./HeaderTile\";\r\nimport { useAppContext } from \"../../utils/AppContext\";\r\nimport \"./style.css\";\r\n\r\n// This component generates the layout grid for the drone to move on\r\nexport default function LayoutGrid() {\r\n    /* eslint-disable no-unused-vars */\r\n    const [state, _] = useAppContext();\r\n\r\n    // on update, scroll the drone into view \r\n    useEffect(() => {\r\n        const droneTile = document.querySelector(\".drone-tile\");\r\n        if (droneTile) {\r\n            // Not supported in all browsers, so check and use\r\n            if (droneTile.scrollIntoViewIfNeeded)\r\n                droneTile.scrollIntoViewIfNeeded({ behavior: \"smooth\", block: \"start\" });\r\n            else\r\n                droneTile.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    });\r\n\r\n    // Generate the x axis header row\r\n    function renderHeaderRow([colStart, colEnd]) {\r\n        const headerRow = [];\r\n        for (let i = colStart; i <= colEnd; i++) {\r\n            headerRow.push(<HeaderTile key={`X${i}`} headerId={`X${i}`} headerName={i} />);\r\n        }\r\n        return headerRow;\r\n    }\r\n\r\n    // Generate rows to be displayed on the y-axis\r\n    function renderRows([rowStart, rowEnd]) {\r\n        const rows = [];\r\n        for (let i = rowStart; i <= rowEnd; i++) {\r\n            const rowId = `Y${i}`;\r\n            rows.push(<GridRow key={rowId} rowId={rowId} yPos={i} />);\r\n        }\r\n        return rows;\r\n    }\r\n\r\n    return (\r\n        <div className=\"d-flex flex-column flex-nowrap overflow-auto p-2 my-3 mx-auto\">\r\n            {renderRows(state.rangeY)}\r\n            <div className=\"d-flex flex-row flex-nowrap justify-content-center\">\r\n                <HeaderTile headerId={`XY`} headerName=\"\" />\r\n                {renderHeaderRow(state.rangeX)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport LayoutGrid from '../components/LayoutGrid';\r\n\r\n// This page displays the application homepage layout grid and the drone\r\nexport default function Homepage(props) {\r\n\r\n    // Enable user input on load of this page\r\n    useEffect(() => {\r\n        props.enableUserInput(true);\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"scroll-wrapper\">\r\n            <LayoutGrid />\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect } from \"react\";\r\n\r\n// This page displays information about the application and drone behaviors\r\nexport default function Information(props) {\r\n\r\n    // Disable user input on load of this page\r\n    useEffect(() => {\r\n        props.enableUserInput(false);\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"scroll-wrapper\">\r\n            <div className=\"p-2 my-3 mx-auto\">\r\n                add information here ...\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { AppContextAction, useAppContext } from \"./AppContext\";\r\n\r\nlet allowKeyEvents = false;\r\nlet previousKeyEventsSetting = false;\r\n\r\n// This custom hook listens for keyboard events and if it is a \r\n// valid drone command, performs the action\r\nexport default function useDroneController() {\r\n    /* eslint-disable no-unused-vars */\r\n    const [state, dispatch] = useAppContext();\r\n    const [isExecuting, setIsExecuting] = useState();\r\n\r\n    // Add key down listener on load of component\r\n    useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    // Function handles the key down event \r\n    function handleKeyDown(event) {\r\n        // Check if keyboard events are enabled for this page\r\n        if (!allowKeyEvents)\r\n            return;\r\n        event.preventDefault();\r\n        switch (event.key) {\r\n            case \"ArrowLeft\":\r\n                dispatch({\r\n                    type: AppContextAction.MOVE_DRONE,\r\n                    move: \"<\",\r\n                });\r\n                break;\r\n            case \"ArrowRight\":\r\n                dispatch({\r\n                    type: AppContextAction.MOVE_DRONE,\r\n                    move: \">\",\r\n                });\r\n                break;\r\n            case \"ArrowUp\":\r\n                dispatch({\r\n                    type: AppContextAction.MOVE_DRONE,\r\n                    move: \"^\",\r\n                });\r\n                break;\r\n            case \"ArrowDown\":\r\n                dispatch({\r\n                    type: AppContextAction.MOVE_DRONE,\r\n                    move: \"v\",\r\n                });\r\n                break;\r\n            case \" \":\r\n                dispatch({\r\n                    type: AppContextAction.CLICK_POSITION,\r\n                });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    // Function enables / disables processing of user keydown events\r\n    function enableUserInput(value) {\r\n        // Disable user input when drone simulation is executing\r\n        if (isExecuting) {\r\n            previousKeyEventsSetting = value;\r\n            return;\r\n        }\r\n\r\n        allowKeyEvents = value;\r\n    }\r\n\r\n    function stopSimulation() {\r\n        allowKeyEvents = previousKeyEventsSetting;\r\n        setIsExecuting(false);\r\n    }\r\n\r\n    function startSimulation(speed, droneInput) {\r\n        previousKeyEventsSetting = allowKeyEvents;\r\n        allowKeyEvents = false;\r\n        setIsExecuting(true);\r\n    }\r\n\r\n    return {\r\n        enableUserInput,\r\n        startSimulation,\r\n        stopSimulation,\r\n        isExecuting,\r\n    };\r\n}","import React from 'react';\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport SimulateDrone from './pages/SimulateDrone';\nimport Homepage from './pages/Homepage';\nimport Information from './pages/Information';\nimport useDroneController from \"./utils/useDroneController\";\n\nfunction App() {\n  const droneController = useDroneController();\n  return (\n    <HashRouter basename={process.env.PUBLIC_URL}>\n      <Navbar\n        isExecuting={droneController.isExecuting}\n        stopSimulation={droneController.stopSimulation} />\n      <Switch>\n        <Route exact path=\"/simulate\">\n          {droneController.isExecuting ?\n            <Redirect to=\"/\" />\n            :\n            <SimulateDrone\n              enableUserInput={droneController.enableUserInput}\n              startSimulation={droneController.startSimulation} />}\n        </Route>\n        <Route exact path=\"/information\">\n          {droneController.isExecuting ?\n            <Redirect to=\"/\" />\n            :\n            <Information\n              enableUserInput={droneController.enableUserInput} />}\n        </Route>\n        <Route path=\"/\">\n          <Homepage enableUserInput={droneController.enableUserInput} />\n        </Route>\n      </Switch>\n    </HashRouter >\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { AppProvider } from \"./utils/AppContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}